---
AWSTemplateFormatVersion: "2010-09-09"

Description: "This template is for creating aws resources for devops deployment"

Mappings:  
  RegionMap:
    "us-east-1":
      AMI: "ami-04aa00acb1165b32a"
    "us-west-2":
      AMI: "ami-04acda42f3629e02b"
    "eu-west-1":
      AMI: "ami-0123456789abcdef0"

Resources:
  s3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: Private
      BucketName: devops237bkt
      ##VersioningConfiguration: Enabled
      Tags:
        - Key: name
          Value: devops_bkt

  ProdVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 172.10.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: name
          Value: devops_vpc_prod  

  DevVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 171.10.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: name
          Value: devops_vpc_dev  

  TestUatVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 170.10.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: name
          Value: devops_vpc_test_uat

  ProdSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
                        - 0
                        - !GetAZs
                          Ref: 'AWS::Region'
      VpcId: !Ref ProdVPC
      CidrBlock: 172.10.0.0/16
      MapPublicIpOnLaunch: false
      Tags:
        - Key: name
          Value: ProdSubnet
  DevSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
                        - 0
                        - !GetAZs
                          Ref: 'AWS::Region'
      VpcId: !Ref DevVPC
      CidrBlock: 171.10.7.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: name
          Value: DevSubnet
  TestUatSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
                        - 0
                        - !GetAZs
                          Ref: 'AWS::Region'
      VpcId: !Ref TestUatVPC
      CidrBlock: 170.10.14.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: name
          Value: TestUatSubnet

  Devigw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: name
          Value: Dev_igw

  DevAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref DevVPC
      InternetGatewayId: !Ref Devigw

  TestUATigw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: name
          Value: TestUAT_igw

  TestUATAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref TestUatVPC
      InternetGatewayId: !Ref TestUATigw

  NatPublicIP:
    Type: AWS::EC2::EIP
    ##DependsOn: !Ref ProdVPC
    Properties:
      Domain: vpc 

  NatGateway:
    Type: AWS::EC2::NatGateway
    ##DependsOn: NatPublicIP
    Properties: 
      SubnetId: !Ref DevSubnet
      AllocationId: !GetAtt NatPublicIP.AllocationId

  Ec2keypair:
    Type: AWS::EC2::KeyPair
    Properties:
      KeyName: devops_cft_keypair

  SecGroupProd:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: Prod_devops_sg
      GroupDescription: ec2 security groups
      VpcId: !Ref ProdVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 172.10.1.0/24 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0    
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 172.10.1.0/24 
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0   
          
      Tags:
        - Key: name
          Value: Prod_awsdevops_sg  

  Jenkinscicd:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref Ec2keypair
      DisableApiTermination: true
      ImageId: !FindInMap [ RegionMap, !Ref 'AWS::Region', AMI ]
      InstanceType: t2.micro
      Monitoring: true
      SecurityGroupIds: 
        - sg-011f898f72cf6251e
      UserData:
        Fn::Base64: |
          #!/bin/bash
          sudo amazon-linux-extras install java-openjdk11 -y
          sudo wget -O /etc/yum.repos.d/jenkins.repo https://pkg.jenkins.io/redhat-stable/jenkins.repo
          sudo rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
          sudo yum update -y
          sudo yum install jenkins -y
          sudo systemctl start jenkins
          sudo systemctl enable jenkins
          echo "Initial Jenkins Admin Password: $(cat /var/lib/jenkins/secrets/initialAdminPassword)"
      Tags:
        - Key: name
          Value: Jenkins_cicd          